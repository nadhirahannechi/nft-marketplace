{"ast":null,"code":"import fetch from \"isomorphic-fetch\";\nimport { API } from \"../config/config\";\nimport cookie from \"js-cookie\";\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    return err;\n  });\n};\nexport const signin = user => {\n  return fetch(`http://localhost:8000/api/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    return err;\n  });\n};\nexport const signout = next => {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  next();\n  return fetch(`http://localhost:8000/api/signout`, {\n    method: \"GET\"\n  }).then(response => {\n    console.log(\"signout success\");\n  }).catch(err => {\n    console.log(err);\n  });\n}; // set the cookie\n\nexport const setCookie = (key, value) => {\n  if (process.browser) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n}; // remove the cookie\n\nexport const removeCookie = key => {\n  if (process.browser) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // get cookie\n\nexport const getCookie = key => {\n  if (process.browser) {\n    return cookie.get(key);\n  }\n}; //localStorage\n\nexport const setLocalStorage = (key, value) => {\n  if (process.browser) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}; // remove from localStrorage\n\nexport const removeLocalStorage = key => {\n  if (process.browser) {\n    localStorage.removeItem(key);\n  }\n}; // autheticate user by pass data to cookie and localStorage\n\nexport const autheticate = (data, next) => {\n  setCookie(\"token\", data.token);\n  setLocalStorage(\"user\", data.user);\n  next();\n};\nexport const isAuth = () => {\n  if (process.browser) {\n    const cookieChecked = getCookie(\"token\");\n\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/home/ubuntu/MERN-boilerPlate/client/src/action/authAcation.js"],"names":["fetch","API","cookie","signup","user","method","headers","Accept","body","JSON","stringify","then","res","json","catch","err","signin","signout","next","removeCookie","removeLocalStorage","response","console","log","setCookie","key","value","process","browser","set","expires","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeItem","autheticate","data","token","isAuth","cookieChecked","getItem","parse"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport { API } from \"../config/config\";\nimport cookie from \"js-cookie\";\n\nexport const signup = (user) => {\n  return fetch(`${API}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(user),\n  })\n    .then((res) => {\n      return res.json();\n    })\n    .catch((err) => {\n      return err;\n    });\n};\n\nexport const signin = (user) => {\n  return fetch(`http://localhost:8000/api/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(user),\n  })\n    .then((res) => {\n      return res.json();\n    })\n    .catch((err) => {\n      return err;\n    });\n};\n\nexport const signout = (next) => {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  next();\n\n  return fetch(`http://localhost:8000/api/signout`, {\n    method: \"GET\",\n  })\n    .then((response) => {\n      console.log(\"signout success\");\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\n// set the cookie\nexport const setCookie = (key, value) => {\n  if (process.browser) {\n    cookie.set(key, value, {\n      expires: 1,\n    });\n  }\n};\n\n// remove the cookie\nexport const removeCookie = (key) => {\n  if (process.browser) {\n    cookie.remove(key, {\n      expires: 1,\n    });\n  }\n};\n\n// get cookie\nexport const getCookie = (key) => {\n  if (process.browser) {\n    return cookie.get(key);\n  }\n};\n\n//localStorage\nexport const setLocalStorage = (key, value) => {\n  if (process.browser) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\n\n// remove from localStrorage\nexport const removeLocalStorage = (key) => {\n  if (process.browser) {\n    localStorage.removeItem(key);\n  }\n};\n\n// autheticate user by pass data to cookie and localStorage\nexport const autheticate = (data, next) => {\n  setCookie(\"token\", data.token);\n  setLocalStorage(\"user\", data.user);\n  next();\n};\n\nexport const isAuth = () => {\n  if (process.browser) {\n    const cookieChecked = getCookie(\"token\");\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      } else {\n        return false;\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}