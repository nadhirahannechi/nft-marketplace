{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/MERN-boilerPlate/client/src/component/user/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; // import Wallet from \"../solanaWallet/wallet\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  // const isPhantomInstalled = window.solana && window.solana.isPhantom;\n  // const getProvider = () => {\n  //   if (\"solana\" in window) {\n  //     const provider = window.solana;\n  //     if (provider.isPhantom) {\n  //       return provider;\n  //     }\n  //   }\n  //   window.open(\"https://phantom.app/\", \"_blank\");\n  // };\n  useEffect(() => {\n    // if (isPhantomInstalled)\n    // Will either automatically connect to Phantom, or do nothing.\n    window.solana.connect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"user panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/ubuntu/MERN-boilerPlate/client/src/component/user/index.tsx"],"names":["React","useEffect","Index","window","solana","connect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAElB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACEE,IAAAA,MAAM,CAACC,MAAP,CAAcC,OAAd;AACH,GAJQ,EAIN,EAJM,CAAT;AAOE,sBACA;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAMH,CA5BD;;GAAMH,K;;KAAAA,K;AA6BN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\n// import Wallet from \"../solanaWallet/wallet\"\n\nconst Index = () => {\n\n  // const isPhantomInstalled = window.solana && window.solana.isPhantom;\n\n  // const getProvider = () => {\n  //   if (\"solana\" in window) {\n  //     const provider = window.solana;\n  //     if (provider.isPhantom) {\n  //       return provider;\n  //     }\n  //   }\n  //   window.open(\"https://phantom.app/\", \"_blank\");\n  // };\n\n\n  useEffect(() => {\n    // if (isPhantomInstalled)\n    // Will either automatically connect to Phantom, or do nothing.\n      window.solana.connect();\n  }, []);\n\n  \n    return (\n    <div>\n      <h3>user panel</h3>\n      {/* <Wallet></Wallet> */}\n    </div>\n  )\n};\nexport default Index\n\n"]},"metadata":{},"sourceType":"module"}