{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/MERN-boilerPlate/client/src/component/user/index.js\",\n    _s = $RefreshSig$();\n\nimport { render } from \"@testing-library/react\";\nimport React, { useEffect } from \"react\"; // import Wallet from \"../solanaWallet/wallet\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst index = () => {\n  _s();\n\n  // const getProvider = () => {\n  //   if (\"solana\" in window) {\n  //     const provider = window.solana;\n  //     if (provider.isPhantom) {\n  //       return provider;\n  //     }\n  //   }\n  //   window.open(\"https://phantom.app/\", \"_blank\");\n  // };\n  useEffect(() => {\n    // Will either automatically connect to Phantom, or do nothing.\n    window.solana.connect({\n      onlyIfTrusted: true\n    });\n  }, []);\n  render()( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"user panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this));\n};\n\n_s(index, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default index;","map":{"version":3,"sources":["/home/ubuntu/MERN-boilerPlate/client/src/component/user/index.js"],"names":["render","React","useEffect","index","window","solana","connect","onlyIfTrusted"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAE,IAAAA,MAAM,CAACC,MAAP,CAAcC,OAAd,CAAsB;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAtB;AACH,GAHQ,EAGN,EAHM,CAAT;AAKAP,EAAAA,MAAM,iBACJ;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADI,CAAN;AAMD,CAzBD;;GAAMG,K;;AA2BN,eAAeA,KAAf","sourcesContent":["import { render } from \"@testing-library/react\";\nimport React, { useEffect } from \"react\";\n\n// import Wallet from \"../solanaWallet/wallet\"\n\nconst index = () => {\n\n\n  // const getProvider = () => {\n  //   if (\"solana\" in window) {\n  //     const provider = window.solana;\n  //     if (provider.isPhantom) {\n  //       return provider;\n  //     }\n  //   }\n  //   window.open(\"https://phantom.app/\", \"_blank\");\n  // };\n\n\n  useEffect(() => {\n      // Will either automatically connect to Phantom, or do nothing.\n      window.solana.connect({ onlyIfTrusted: true });\n  }, []);\n\n  render() (\n    <div>\n      <h3>user panel</h3>\n      {/* <Wallet></Wallet> */}\n    </div>\n  );\n};\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}