{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16","program":"/home/ubuntu/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_core","--edition=2018","/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=1f920a9dbf2254f0","-C","extra-filename=-1f920a9dbf2254f0","--out-dir","/home/ubuntu/MERN-boilerPlate/solana/rust/program/target/rls/debug/deps","-L","dependency=/home/ubuntu/MERN-boilerPlate/solana/rust/program/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/ubuntu/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ubuntu/MERN-boilerPlate/solana/rust/program/target/rls/debug/deps/libfutures_core-1f920a9dbf2254f0.rmeta"},"prelude":{"crate_id":{"name":"futures_core","disambiguator":[15613720965341448069,5817984993197141724]},"crate_root":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src","external_crates":[{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17255007459673538994,10308005785557406899]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","num":2,"id":{"name":"core","disambiguator":[1111923456158047016,16902919259693091653]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4206559302939301148,6164973543688958239]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5256837966271238037,14624209252821231605]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7550531950105187004,8150571798412653191]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15335445469838442753,9552689356239597613]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16502730494113453331,739642837530493346]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17056567370692029606,5237526203530126554]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14937216707889756020,8824175777475717960]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17577480307990758245,11665649631686256755]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10532265776820743552,12261914965731844528]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[15918998743166050901,5153345746580364318]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13847123446638245357,191099483651108540]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8535951946701118478,247082403716274271]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8071155208203251459,9749237191716311885]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[10993643928529734294,4550819794165110057]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[3520407426629514955,6784388313453073637]}},{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[947612539730288161,7851933247975044788]}}],"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","byte_start":0,"byte_end":794,"line_start":1,"line_end":27,"column_start":1,"column_end":14}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":12019},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":929,"byte_end":935,"line_start":8,"line_end":8,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","byte_start":646,"byte_end":657,"line_start":20,"line_end":20,"column_start":24,"column_end":35},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12019},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","byte_start":659,"byte_end":665,"line_start":20,"line_end":20,"column_start":37,"column_end":43},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","byte_start":667,"byte_end":676,"line_start":20,"line_end":20,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","byte_start":734,"byte_end":745,"line_start":24,"line_end":24,"column_start":24,"column_end":35},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","byte_start":747,"byte_end":753,"line_start":24,"line_end":24,"column_start":37,"column_end":43},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","byte_start":755,"byte_end":764,"line_start":24,"line_end":24,"column_start":45,"column_end":54},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":194},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/mod.rs","byte_start":12669,"byte_end":12680,"line_start":4,"line_end":4,"column_start":29,"column_end":40},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":170}},{"kind":"Use","ref_id":{"krate":2,"index":12291},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/mod.rs","byte_start":12146,"byte_end":12153,"line_start":10,"line_end":10,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":42376},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/mod.rs","byte_start":12155,"byte_end":12159,"line_start":10,"line_end":10,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":42412},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/mod.rs","byte_start":12161,"byte_end":12169,"line_start":10,"line_end":10,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":42421},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/mod.rs","byte_start":12171,"byte_end":12185,"line_start":10,"line_end":10,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":12301},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/mod.rs","byte_start":12187,"byte_end":12192,"line_start":10,"line_end":10,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":167}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","byte_start":0,"byte_end":794,"line_start":1,"line_end":27,"column_start":1,"column_end":14},"name":"","qualname":"::","value":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167}],"decl_id":null,"docs":" Core traits and types for asynchronous operations in Rust.\n","sig":null,"attributes":[{"value":"/ Core traits and types for asynchronous operations in Rust.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","byte_start":0,"byte_end":62,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","byte_start":107,"byte_end":195,"line_start":4,"line_end":4,"column_start":1,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":44},{"krate":0,"index":48},{"krate":0,"index":55}],"decl_id":null,"docs":" Futures.\n","sig":null,"attributes":[{"value":"/ Futures.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":796,"byte_end":808,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":21},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1113,"byte_end":1122,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"BoxFuture","qualname":"::future::BoxFuture","value":"Pin<alloc::boxed::Box<dyn Future<Output = T> + Send + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" An owned dynamically typed [`Future`] for use in cases where you can't\n statically type your result or need to add some indirection.\n","sig":null,"attributes":[{"value":"/ An owned dynamically typed [`Future`] for use in cases where you can't","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":938,"byte_end":1012,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ statically type your result or need to add some indirection.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1013,"byte_end":1077,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1078,"byte_end":1103,"line_start":12,"line_end":12,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1281,"byte_end":1295,"line_start":17,"line_end":17,"column_start":10,"column_end":24},"name":"LocalBoxFuture","qualname":"::future::LocalBoxFuture","value":"Pin<alloc::boxed::Box<dyn Future<Output = T> + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" `BoxFuture`, but without the `Send` requirement.\n","sig":null,"attributes":[{"value":"/ `BoxFuture`, but without the `Send` requirement.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1193,"byte_end":1245,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1246,"byte_end":1271,"line_start":16,"line_end":16,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1822,"byte_end":1833,"line_start":27,"line_end":27,"column_start":11,"column_end":22},"name":"FusedFuture","qualname":"::future::FusedFuture","value":"FusedFuture: Future","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":" A future which tracks whether or not the underlying future\n should no longer be polled.","sig":null,"attributes":[{"value":"/ A future which tracks whether or not the underlying future","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1359,"byte_end":1421,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/ should no longer be polled.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1422,"byte_end":1453,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1454,"byte_end":1457,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `is_terminated` will return `true` if a future should no longer be polled.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1458,"byte_end":1536,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ Usually, this state occurs after `poll` (or `try_poll`) returned","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1537,"byte_end":1605,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/ `Poll::Ready`. However, `is_terminated` may also return `true` if a future","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1606,"byte_end":1684,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ has become inactive and can no longer make progress and should be ignored","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1685,"byte_end":1762,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ or dropped rather than being `poll`ed again.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1763,"byte_end":1811,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1927,"byte_end":1940,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"::future::FusedFuture::is_terminated","value":"pub fn is_terminated(&Self) -> bool","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Returns `true` if the underlying future should no longer be polled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the underlying future should no longer be polled.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1848,"byte_end":1919,"line_start":28,"line_end":28,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2382,"byte_end":2388,"line_start":51,"line_end":51,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::future::private_try_future::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2612,"byte_end":2621,"line_start":58,"line_end":58,"column_start":11,"column_end":20},"name":"TryFuture","qualname":"::future::TryFuture","value":"TryFuture: Future + private_try_future::Sealed","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" A convenience for futures that return `Result` values that includes\n a variety of adapters tailored to such futures.\n","sig":null,"attributes":[{"value":"/ A convenience for futures that return `Result` values that includes","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2478,"byte_end":2549,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/ a variety of adapters tailored to such futures.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2550,"byte_end":2601,"line_start":57,"line_end":57,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":45},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2731,"byte_end":2733,"line_start":60,"line_end":60,"column_start":10,"column_end":12},"name":"Ok","qualname":"::future::TryFuture::Ok","value":"type Ok;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" The type of successful values yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of successful values yielded by this future","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2665,"byte_end":2721,"line_start":59,"line_end":59,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2797,"byte_end":2802,"line_start":63,"line_end":63,"column_start":10,"column_end":15},"name":"Error","qualname":"::future::TryFuture::Error","value":"type Error;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" The type of failures yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of failures yielded by this future","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2740,"byte_end":2787,"line_start":62,"line_end":62,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":3052,"byte_end":3060,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"try_poll","qualname":"::future::TryFuture::try_poll","value":"pub fn try_poll(Pin<&mut Self>, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Poll this `TryFuture` as if it were a `Future`.","sig":null,"attributes":[{"value":"/ Poll this `TryFuture` as if it were a `Future`.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2809,"byte_end":2860,"line_start":65,"line_end":65,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2865,"byte_end":2868,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This method is a stopgap for a compiler limitation that prevents us from","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2873,"byte_end":2949,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ directly inheriting from the `Future` trait; in the future it won't be","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2954,"byte_end":3028,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ needed.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":3033,"byte_end":3044,"line_start":69,"line_end":69,"column_start":5,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":76},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":100},{"krate":0,"index":105},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":127},{"krate":0,"index":131},{"krate":0,"index":138}],"decl_id":null,"docs":" Asynchronous streams.\n","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":3887,"byte_end":3912,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":90},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4168,"byte_end":4177,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"BoxStream","qualname":"::stream::BoxStream","value":"Pin<alloc::boxed::Box<dyn Stream<Item = T> + Send + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" An owned dynamically typed [`Stream`] for use in cases where you can't\n statically type your result or need to add some indirection.\n","sig":null,"attributes":[{"value":"/ An owned dynamically typed [`Stream`] for use in cases where you can't","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":3993,"byte_end":4067,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ statically type your result or need to add some indirection.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4068,"byte_end":4132,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4133,"byte_end":4158,"line_start":9,"line_end":9,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4334,"byte_end":4348,"line_start":14,"line_end":14,"column_start":10,"column_end":24},"name":"LocalBoxStream","qualname":"::stream::LocalBoxStream","value":"Pin<alloc::boxed::Box<dyn Stream<Item = T> + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" `BoxStream`, but without the `Send` requirement.\n","sig":null,"attributes":[{"value":"/ `BoxStream`, but without the `Send` requirement.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4246,"byte_end":4298,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4299,"byte_end":4324,"line_start":13,"line_end":13,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":96},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4955,"byte_end":4961,"line_start":27,"line_end":27,"column_start":11,"column_end":17},"name":"Stream","qualname":"::stream::Stream","value":"Stream","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"decl_id":null,"docs":" A stream of values produced asynchronously.","sig":null,"attributes":[{"value":"/ A stream of values produced asynchronously.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4410,"byte_end":4457,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4458,"byte_end":4461,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If `Future<Output = T>` is an asynchronous version of `T`, then `Stream<Item","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4462,"byte_end":4542,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ = T>` is an asynchronous version of `Iterator<Item = T>`. A stream","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4543,"byte_end":4613,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ represents a sequence of value-producing events that occur asynchronously to","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4614,"byte_end":4694,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4695,"byte_end":4710,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4711,"byte_end":4714,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The trait is modeled after `Future`, but allows `poll_next` to be called","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4715,"byte_end":4791,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ even after a value has been produced, yielding `None` once the stream has","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4792,"byte_end":4869,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ been fully exhausted.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4870,"byte_end":4895,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4896,"byte_end":4944,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":97},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5011,"byte_end":5015,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"name":"Item","qualname":"::stream::Stream::Item","value":"type Item;","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Values yielded by the stream.\n","sig":null,"attributes":[{"value":"/ Values yielded by the stream.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":4968,"byte_end":5001,"line_start":28,"line_end":28,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6731,"byte_end":6740,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"poll_next","qualname":"::stream::Stream::poll_next","value":"pub fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Attempt to pull out the next value of this stream, registering the\n current task for wakeup if the value is not yet available, and returning\n `None` if the stream is exhausted.","sig":null,"attributes":[{"value":"/ Attempt to pull out the next value of this stream, registering the","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5022,"byte_end":5092,"line_start":31,"line_end":31,"column_start":5,"column_end":75}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5097,"byte_end":5173,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ `None` if the stream is exhausted.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5178,"byte_end":5216,"line_start":33,"line_end":33,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5221,"byte_end":5224,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5229,"byte_end":5247,"line_start":35,"line_end":35,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5252,"byte_end":5255,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values, each indicating a distinct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5260,"byte_end":5332,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/ stream state:","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5337,"byte_end":5354,"line_start":38,"line_end":38,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5359,"byte_end":5362,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Pending` means that this stream's next value is not ready","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5367,"byte_end":5437,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"/ yet. Implementations will ensure that the current task will be notified","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5442,"byte_end":5517,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/ when the next value may be ready.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5522,"byte_end":5559,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5564,"byte_end":5567,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Some(val))` means that the stream has successfully","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5572,"byte_end":5641,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ produced a value, `val`, and may produce further values on subsequent","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5646,"byte_end":5719,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ `poll_next` calls.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5724,"byte_end":5746,"line_start":46,"line_end":46,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5751,"byte_end":5754,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(None)` means that the stream has terminated, and","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5759,"byte_end":5826,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ `poll_next` should not be invoked again.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5831,"byte_end":5875,"line_start":49,"line_end":49,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5880,"byte_end":5883,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5888,"byte_end":5900,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5905,"byte_end":5908,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Once a stream has finished (returned `Ready(None)` from `poll_next`), calling its","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":5913,"byte_end":5998,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ `poll_next` method again may panic, block forever, or cause other kinds of","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6003,"byte_end":6081,"line_start":54,"line_end":54,"column_start":5,"column_end":83}},{"value":"/ problems; the `Stream` trait places no requirements on the effects of","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6086,"byte_end":6159,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ such a call. However, as the `poll_next` method is not marked `unsafe`,","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6164,"byte_end":6239,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ Rust's usual rules apply: calls must never cause undefined behavior","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6244,"byte_end":6315,"line_start":57,"line_end":57,"column_start":5,"column_end":76}},{"value":"/ (memory corruption, incorrect use of `unsafe` functions, or the like),","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6320,"byte_end":6394,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ regardless of the stream's state.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6399,"byte_end":6436,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6441,"byte_end":6444,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If this is difficult to guard against then the [`fuse`] adapter can be used","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6449,"byte_end":6528,"line_start":61,"line_end":61,"column_start":5,"column_end":84}},{"value":"/ to ensure that `poll_next` always returns `Ready(None)` in subsequent","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6533,"byte_end":6606,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ calls.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6611,"byte_end":6621,"line_start":63,"line_end":63,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6626,"byte_end":6629,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`fuse`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.fuse","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6634,"byte_end":6723,"line_start":65,"line_end":65,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":8125,"byte_end":8134,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"size_hint","qualname":"::stream::Stream::size_hint","value":"pub fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Returns the bounds on the remaining length of the stream.","sig":null,"attributes":[{"value":"/ Returns the bounds on the remaining length of the stream.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6819,"byte_end":6880,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6885,"byte_end":6888,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Specifically, `size_hint()` returns a tuple where the first element","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6893,"byte_end":6964,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ is the lower bound, and the second element is the upper bound.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":6969,"byte_end":7035,"line_start":71,"line_end":71,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7040,"byte_end":7043,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The second half of the tuple that is returned is an [`Option`]`<`[`usize`]`>`.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7048,"byte_end":7130,"line_start":73,"line_end":73,"column_start":5,"column_end":87}},{"value":"/ A [`None`] here means that either there is no known upper bound, or the","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7135,"byte_end":7210,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ upper bound is larger than [`usize`].","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7215,"byte_end":7256,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7261,"byte_end":7264,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Implementation notes","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7269,"byte_end":7295,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7300,"byte_end":7303,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ It is not enforced that a stream implementation yields the declared","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7308,"byte_end":7379,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ number of elements. A buggy stream may yield less than the lower bound","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7384,"byte_end":7458,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ or more than the upper bound of elements.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7463,"byte_end":7508,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7513,"byte_end":7516,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `size_hint()` is primarily intended to be used for optimizations such as","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7521,"byte_end":7597,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ reserving space for the elements of the stream, but must not be","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7602,"byte_end":7669,"line_start":84,"line_end":84,"column_start":5,"column_end":72}},{"value":"/ trusted to e.g., omit bounds checks in unsafe code. An incorrect","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7674,"byte_end":7742,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/ implementation of `size_hint()` should not lead to memory safety","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7747,"byte_end":7815,"line_start":86,"line_end":86,"column_start":5,"column_end":73}},{"value":"/ violations.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7820,"byte_end":7835,"line_start":87,"line_end":87,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7840,"byte_end":7843,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ That said, the implementation should provide a correct estimation,","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7848,"byte_end":7918,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ because otherwise it would be a violation of the trait's protocol.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7923,"byte_end":7993,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":7998,"byte_end":8001,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `(0, `[`None`]`)` which is correct for any","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":8006,"byte_end":8087,"line_start":92,"line_end":92,"column_start":5,"column_end":86}},{"value":"/ stream.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":8092,"byte_end":8103,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":8108,"byte_end":8117,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":9355,"byte_end":9366,"line_start":136,"line_end":136,"column_start":11,"column_end":22},"name":"FusedStream","qualname":"::stream::FusedStream","value":"FusedStream: Stream","parent":null,"children":[{"krate":0,"index":111}],"decl_id":null,"docs":" A stream which tracks whether or not the underlying stream\n should no longer be polled.","sig":null,"attributes":[{"value":"/ A stream which tracks whether or not the underlying stream","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":8878,"byte_end":8940,"line_start":128,"line_end":128,"column_start":1,"column_end":63}},{"value":"/ should no longer be polled.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":8941,"byte_end":8972,"line_start":129,"line_end":129,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":8973,"byte_end":8976,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ `is_terminated` will return `true` if a future should no longer be polled.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":8977,"byte_end":9055,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ Usually, this state occurs after `poll_next` (or `try_poll_next`) returned","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":9056,"byte_end":9134,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ `Poll::Ready(None)`. However, `is_terminated` may also return `true` if a","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":9135,"byte_end":9212,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ stream has become inactive and can no longer make progress and should be","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":9213,"byte_end":9289,"line_start":134,"line_end":134,"column_start":1,"column_end":77}},{"value":"/ ignored or dropped rather than being polled again.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":9290,"byte_end":9344,"line_start":135,"line_end":135,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":9449,"byte_end":9462,"line_start":138,"line_end":138,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"::stream::FusedStream::is_terminated","value":"pub fn is_terminated(&Self) -> bool","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Returns `true` if the stream should no longer be polled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the stream should no longer be polled.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":9381,"byte_end":9441,"line_start":137,"line_end":137,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":122},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":9904,"byte_end":9910,"line_start":160,"line_end":160,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::stream::private_try_stream::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":127},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10132,"byte_end":10141,"line_start":167,"line_end":167,"column_start":11,"column_end":20},"name":"TryStream","qualname":"::stream::TryStream","value":"TryStream: Stream + private_try_stream::Sealed","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"decl_id":null,"docs":" A convenience for streams that return `Result` values that includes\n a variety of adapters tailored to such futures.\n","sig":null,"attributes":[{"value":"/ A convenience for streams that return `Result` values that includes","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":9998,"byte_end":10069,"line_start":165,"line_end":165,"column_start":1,"column_end":72}},{"value":"/ a variety of adapters tailored to such futures.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10070,"byte_end":10121,"line_start":166,"line_end":166,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":128},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10251,"byte_end":10253,"line_start":169,"line_end":169,"column_start":10,"column_end":12},"name":"Ok","qualname":"::stream::TryStream::Ok","value":"type Ok;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The type of successful values yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of successful values yielded by this future","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10185,"byte_end":10241,"line_start":168,"line_end":168,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10317,"byte_end":10322,"line_start":172,"line_end":172,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::TryStream::Error","value":"type Error;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The type of failures yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of failures yielded by this future","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10260,"byte_end":10307,"line_start":171,"line_end":171,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10572,"byte_end":10585,"line_start":179,"line_end":179,"column_start":8,"column_end":21},"name":"try_poll_next","qualname":"::stream::TryStream::try_poll_next","value":"pub fn try_poll_next(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>>","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Poll this `TryStream` as if it were a `Stream`.","sig":null,"attributes":[{"value":"/ Poll this `TryStream` as if it were a `Stream`.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10329,"byte_end":10380,"line_start":174,"line_end":174,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10385,"byte_end":10388,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This method is a stopgap for a compiler limitation that prevents us from","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10393,"byte_end":10469,"line_start":176,"line_end":176,"column_start":5,"column_end":81}},{"value":"/ directly inheriting from the `Stream` trait; in the future it won't be","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10474,"byte_end":10548,"line_start":177,"line_end":177,"column_start":5,"column_end":79}},{"value":"/ needed.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10553,"byte_end":10564,"line_start":178,"line_end":178,"column_start":5,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":167},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230}],"decl_id":null,"docs":" Task notification.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","byte_start":768,"byte_end":780,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"/ Task notification.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/mod.rs","byte_start":12023,"byte_end":12045,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":170},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"__internal","qualname":"::task::__internal","value":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/mod.rs","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":214}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":194},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15584,"byte_end":15595,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"AtomicWaker","qualname":"::task::__internal::atomic_waker::AtomicWaker","value":"AtomicWaker {  }","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"decl_id":null,"docs":" A synchronization primitive for task wakeup.","sig":null,"attributes":[{"value":"/ A synchronization primitive for task wakeup.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":12849,"byte_end":12897,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":12898,"byte_end":12901,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Sometimes the task interested in a given event will change over time.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":12902,"byte_end":12975,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ An `AtomicWaker` can coordinate concurrent notifications with the consumer","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":12976,"byte_end":13054,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ potentially \"updating\" the underlying task to wake up. This is useful in","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13055,"byte_end":13131,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ scenarios where a computation completes in another thread and wants to","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13132,"byte_end":13206,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ notify the consumer, but the consumer is in the process of being migrated to","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13207,"byte_end":13287,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ a new logical task.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13288,"byte_end":13311,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13312,"byte_end":13315,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Consumers should call `register` before checking the result of a computation","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13316,"byte_end":13396,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ and producers should call `wake` after producing the computation (this","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13397,"byte_end":13471,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ differs from the usual `thread::park` pattern). It is also permitted for","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13472,"byte_end":13548,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ `wake` to be called **before** `register`. This results in a no-op.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13549,"byte_end":13620,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13621,"byte_end":13624,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A single `AtomicWaker` may be reused for any number of calls to `register` or","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13625,"byte_end":13706,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/ `wake`.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13707,"byte_end":13718,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13719,"byte_end":13722,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Memory ordering","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13723,"byte_end":13744,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13745,"byte_end":13748,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Calling `register` \"acquires\" all memory \"released\" by calls to `wake`","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13749,"byte_end":13823,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ before the call to `register`.  Later calls to `wake` will wake the","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13824,"byte_end":13895,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ registered waker (on contention this wake might be triggered in `register`).","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13896,"byte_end":13976,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13977,"byte_end":13980,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ For concurrent calls to `register` (should be avoided) the ordering is only","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":13981,"byte_end":14060,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ guaranteed for the winning call.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14061,"byte_end":14097,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14098,"byte_end":14101,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14102,"byte_end":14116,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14117,"byte_end":14120,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example providing a `Flag` that can be signalled manually","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14121,"byte_end":14199,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ when it is ready.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14200,"byte_end":14221,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14222,"byte_end":14225,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14226,"byte_end":14233,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use futures::future::Future;","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14234,"byte_end":14266,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ use futures::task::{Context, Poll, AtomicWaker};","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14267,"byte_end":14319,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14320,"byte_end":14343,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14344,"byte_end":14382,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14383,"byte_end":14428,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14429,"byte_end":14451,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14452,"byte_end":14455,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ struct Inner {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14456,"byte_end":14474,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/     waker: AtomicWaker,","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14475,"byte_end":14502,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/     set: AtomicBool,","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14503,"byte_end":14527,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14528,"byte_end":14533,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14534,"byte_end":14537,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14538,"byte_end":14558,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/ struct Flag(Arc<Inner>);","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14559,"byte_end":14587,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14588,"byte_end":14591,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Flag {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14592,"byte_end":14607,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     pub fn new() -> Self {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14608,"byte_end":14638,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"/         Self(Arc::new(Inner {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14639,"byte_end":14672,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/             waker: AtomicWaker::new(),","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14673,"byte_end":14715,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/             set: AtomicBool::new(false),","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14716,"byte_end":14760,"line_start":58,"line_end":58,"column_start":1,"column_end":45}},{"value":"/         }))","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14761,"byte_end":14776,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14777,"byte_end":14786,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14787,"byte_end":14790,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     pub fn signal(&self) {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14791,"byte_end":14821,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/         self.0.set.store(true, Relaxed);","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14822,"byte_end":14866,"line_start":63,"line_end":63,"column_start":1,"column_end":45}},{"value":"/         self.0.waker.wake();","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14867,"byte_end":14899,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14900,"byte_end":14909,"line_start":65,"line_end":65,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14910,"byte_end":14915,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14916,"byte_end":14919,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ impl Future for Flag {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14920,"byte_end":14946,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/     type Output = ();","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14947,"byte_end":14972,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14973,"byte_end":14976,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":14977,"byte_end":15050,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/         // quick check to avoid registration if already done.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15051,"byte_end":15116,"line_start":72,"line_end":72,"column_start":1,"column_end":66}},{"value":"/         if self.0.set.load(Relaxed) {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15117,"byte_end":15158,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/             return Poll::Ready(());","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15159,"byte_end":15198,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/         }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15199,"byte_end":15212,"line_start":75,"line_end":75,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15213,"byte_end":15216,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         self.0.waker.register(cx.waker());","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15217,"byte_end":15263,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15264,"byte_end":15267,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/         // Need to check condition **after** `register` to avoid a race","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15268,"byte_end":15343,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/         // condition that would result in lost notifications.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15344,"byte_end":15409,"line_start":80,"line_end":80,"column_start":1,"column_end":66}},{"value":"/         if self.0.set.load(Relaxed) {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15410,"byte_end":15451,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/             Poll::Ready(())","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15452,"byte_end":15483,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/         } else {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15484,"byte_end":15504,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/             Poll::Pending","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15505,"byte_end":15534,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/         }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15535,"byte_end":15548,"line_start":85,"line_end":85,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15549,"byte_end":15558,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15559,"byte_end":15564,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":15565,"byte_end":15572,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":20660,"byte_end":20663,"line_start":200,"line_end":200,"column_start":18,"column_end":21},"name":"new","qualname":"<AtomicWaker>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `AtomicWaker`.\n","sig":null,"attributes":[{"value":"/ Create an `AtomicWaker`.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":20614,"byte_end":20642,"line_start":199,"line_end":199,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22916,"byte_end":22924,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"register","qualname":"<AtomicWaker>::register","value":"pub fn register(&Self, &Waker)","parent":null,"children":[],"decl_id":null,"docs":" Registers the waker to be notified on calls to `wake`.","sig":null,"attributes":[{"value":"/ Registers the waker to be notified on calls to `wake`.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":20878,"byte_end":20936,"line_start":208,"line_end":208,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":20941,"byte_end":20944,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The new task will take place of any previous tasks that were registered","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":20949,"byte_end":21024,"line_start":210,"line_end":210,"column_start":5,"column_end":80}},{"value":"/ by previous calls to `register`. Any calls to `wake` that happen after","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21029,"byte_end":21103,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ a call to `register` (as defined by the memory ordering rules), will","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21108,"byte_end":21180,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ notify the `register` caller's task and deregister the waker from future","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21185,"byte_end":21261,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ notifications. Because of this, callers should ensure `register` gets","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21266,"byte_end":21339,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ invoked with a new `Waker` **each** time they require a wakeup.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21344,"byte_end":21411,"line_start":215,"line_end":215,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21416,"byte_end":21419,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ It is safe to call `register` with multiple other threads concurrently","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21424,"byte_end":21498,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ calling `wake`. This will result in the `register` caller's current","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21503,"byte_end":21574,"line_start":218,"line_end":218,"column_start":5,"column_end":76}},{"value":"/ task being notified once.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21579,"byte_end":21608,"line_start":219,"line_end":219,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21613,"byte_end":21616,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This function is safe to call concurrently, but this is generally a bad","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21621,"byte_end":21696,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ idea. Concurrent calls to `register` will attempt to register different","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21701,"byte_end":21776,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ tasks to be notified. One of the callers will win and have its task set,","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21781,"byte_end":21857,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ but there is no guarantee as to which caller will succeed.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21862,"byte_end":21924,"line_start":224,"line_end":224,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21929,"byte_end":21932,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21937,"byte_end":21951,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21956,"byte_end":21959,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Here is how `register` is used when implementing a flag.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":21964,"byte_end":22024,"line_start":228,"line_end":228,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22029,"byte_end":22032,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22037,"byte_end":22044,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use futures::future::Future;","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22049,"byte_end":22081,"line_start":231,"line_end":231,"column_start":5,"column_end":37}},{"value":"/ use futures::task::{Context, Poll, AtomicWaker};","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22086,"byte_end":22138,"line_start":232,"line_end":232,"column_start":5,"column_end":57}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22143,"byte_end":22181,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22186,"byte_end":22231,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22236,"byte_end":22258,"line_start":235,"line_end":235,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22263,"byte_end":22266,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ struct Flag {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22271,"byte_end":22288,"line_start":237,"line_end":237,"column_start":5,"column_end":22}},{"value":"/     waker: AtomicWaker,","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22293,"byte_end":22320,"line_start":238,"line_end":238,"column_start":5,"column_end":32}},{"value":"/     set: AtomicBool,","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22325,"byte_end":22349,"line_start":239,"line_end":239,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22354,"byte_end":22359,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22364,"byte_end":22367,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ impl Future for Flag {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22372,"byte_end":22398,"line_start":242,"line_end":242,"column_start":5,"column_end":31}},{"value":"/     type Output = ();","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22403,"byte_end":22428,"line_start":243,"line_end":243,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22433,"byte_end":22436,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/     fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22441,"byte_end":22514,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/         // Register **before** checking `set` to avoid a race condition","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22519,"byte_end":22594,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/         // that would result in lost notifications.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22599,"byte_end":22654,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/         self.waker.register(cx.waker());","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22659,"byte_end":22703,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22708,"byte_end":22711,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/         if self.set.load(Relaxed) {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22716,"byte_end":22755,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/             Poll::Ready(())","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22760,"byte_end":22791,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22796,"byte_end":22816,"line_start":252,"line_end":252,"column_start":5,"column_end":25}},{"value":"/             Poll::Pending","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22821,"byte_end":22850,"line_start":253,"line_end":253,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22855,"byte_end":22868,"line_start":254,"line_end":254,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22873,"byte_end":22882,"line_start":255,"line_end":255,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22887,"byte_end":22892,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":22897,"byte_end":22904,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":27604,"byte_end":27608,"line_start":351,"line_end":351,"column_start":12,"column_end":16},"name":"wake","qualname":"<AtomicWaker>::wake","value":"pub fn wake(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Calls `wake` on the last `Waker` passed to `register`.","sig":null,"attributes":[{"value":"/ Calls `wake` on the last `Waker` passed to `register`.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":27455,"byte_end":27513,"line_start":348,"line_end":348,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":27518,"byte_end":27521,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If `register` has not been called yet, then this does nothing.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":27526,"byte_end":27592,"line_start":350,"line_end":350,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":28104,"byte_end":28108,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"name":"take","qualname":"<AtomicWaker>::take","value":"pub fn take(&Self) -> Option<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last `Waker` passed to `register`, so that the user can wake it.","sig":null,"attributes":[{"value":"/ Returns the last `Waker` passed to `register`, so that the user can wake it.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":27708,"byte_end":27788,"line_start":357,"line_end":357,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":27793,"byte_end":27796,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":27801,"byte_end":27804,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Sometimes, just waking the AtomicWaker is not fine grained enough. This allows the user","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":27809,"byte_end":27900,"line_start":360,"line_end":360,"column_start":5,"column_end":96}},{"value":"/ to take the waker and then wake it separately, rather than performing both steps in one","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":27905,"byte_end":27996,"line_start":361,"line_end":361,"column_start":5,"column_end":96}},{"value":"/ atomic action.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":28001,"byte_end":28019,"line_start":362,"line_end":362,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":28024,"byte_end":28027,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ If a waker has not been registered, this returns `None`.","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":28032,"byte_end":28092,"line_start":364,"line_end":364,"column_start":5,"column_end":65}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2145,"byte_end":2148,"line_start":38,"line_end":38,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2422,"byte_end":2423,"line_start":53,"line_end":53,"column_start":30,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":3176,"byte_end":3177,"line_start":73,"line_end":73,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":3545,"byte_end":3548,"line_start":91,"line_end":91,"column_start":59,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":3749,"byte_end":3765,"line_start":98,"line_end":98,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":8535,"byte_end":8538,"line_start":112,"line_end":112,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":9667,"byte_end":9670,"line_start":147,"line_end":147,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":9944,"byte_end":9945,"line_start":162,"line_end":162,"column_start":30,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10732,"byte_end":10733,"line_start":185,"line_end":185,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":11133,"byte_end":11136,"line_start":205,"line_end":205,"column_start":49,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":11507,"byte_end":11523,"line_start":218,"line_end":218,"column_start":44,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":11898,"byte_end":11901,"line_start":230,"line_end":230,"column_start":59,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":20596,"byte_end":20607,"line_start":198,"line_end":198,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":20777,"byte_end":20782,"line_start":203,"line_end":203,"column_start":29,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":29235,"byte_end":29246,"line_start":396,"line_end":396,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":29325,"byte_end":29336,"line_start":402,"line_end":402,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":29465,"byte_end":29476,"line_start":408,"line_end":408,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":29501,"byte_end":29512,"line_start":409,"line_end":409,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","byte_start":600,"byte_end":606,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","byte_start":688,"byte_end":694,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":76}},{"kind":"Mod","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/lib.rs","byte_start":789,"byte_end":793,"line_start":27,"line_end":27,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":167}},{"kind":"Mod","span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/mod.rs","byte_start":12094,"byte_end":12104,"line_start":7,"line_end":7,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":170}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":1835,"byte_end":1841,"line_start":27,"line_end":27,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":12019},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2145,"byte_end":2148,"line_start":38,"line_end":38,"column_start":25,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":39846},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2422,"byte_end":2423,"line_start":53,"line_end":53,"column_start":30,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":41},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2623,"byte_end":2629,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":12019},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":2652,"byte_end":2658,"line_start":58,"line_end":58,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":3176,"byte_end":3177,"line_start":73,"line_end":73,"column_start":29,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":49},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":3545,"byte_end":3548,"line_start":91,"line_end":91,"column_start":59,"column_end":62},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/future.rs","byte_start":3749,"byte_end":3765,"line_start":98,"line_end":98,"column_start":54,"column_end":70},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":5420},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":8535,"byte_end":8538,"line_start":112,"line_end":112,"column_start":20,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":2,"index":39846},"to":{"krate":0,"index":96}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":9368,"byte_end":9374,"line_start":136,"line_end":136,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":96},"to":{"krate":0,"index":110}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":9667,"byte_end":9670,"line_start":147,"line_end":147,"column_start":25,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":39846},"to":{"krate":0,"index":110}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":9944,"byte_end":9945,"line_start":162,"line_end":162,"column_start":30,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":124},"to":{"krate":0,"index":122}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10143,"byte_end":10149,"line_start":167,"line_end":167,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":96},"to":{"krate":0,"index":127}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10172,"byte_end":10178,"line_start":167,"line_end":167,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":122},"to":{"krate":0,"index":127}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":10732,"byte_end":10733,"line_start":185,"line_end":185,"column_start":29,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":132},"to":{"krate":0,"index":127}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":11133,"byte_end":11136,"line_start":205,"line_end":205,"column_start":49,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":96}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":11507,"byte_end":11523,"line_start":218,"line_end":218,"column_start":44,"column_end":60},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":5420},"to":{"krate":0,"index":96}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/stream.rs","byte_start":11898,"byte_end":11901,"line_start":230,"line_end":230,"column_start":59,"column_end":62},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":110}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":20596,"byte_end":20607,"line_start":198,"line_end":198,"column_start":6,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":20741,"byte_end":20745,"line_start":202,"line_end":202,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2844},"to":{"krate":0,"index":202}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":20777,"byte_end":20782,"line_start":203,"line_end":203,"column_start":29,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":12301},"to":{"krate":0,"index":202}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":29235,"byte_end":29246,"line_start":396,"line_end":396,"column_start":18,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":2810}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":29325,"byte_end":29336,"line_start":402,"line_end":402,"column_start":21,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":29465,"byte_end":29476,"line_start":408,"line_end":408,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":2832}},{"span":{"file_name":"/home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.16/src/task/__internal/atomic_waker.rs","byte_start":29501,"byte_end":29512,"line_start":409,"line_end":409,"column_start":22,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":2844}}]}